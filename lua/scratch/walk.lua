local g={}local a=require("plenary.job")local b=require("nui.menu")local c={menu={position="50%",size={width=25,height=5},border={style="solid",text={top="Walk",top_align="center"}},win_options={winhighlight="Normal:NormalFloat"}}}local d;d=function(f,h,i)if h==nil then h={}end;if i==nil then i={}end;i=vim.tbl_deep_extend("keep",i,c.menu)local j=vim.fn.fnamemodify(f,":e")if j==""then j="txt"else j=j end;local k=vim.api.nvim_create_buf(false,true)vim.api.nvim_buf_set_option(k,"filetype",j)vim.api.nvim_win_set_buf(0,k)local l={lines=vim.tbl_map(b.item,h),max_width=20,keymap={focus_next={"j","<Down>","<Tab>"},focus_prev={"k","<Up>","<S-Tab>"},close={"<Esc>","<C-c>"},submit={"<CR>","<Space>"}},on_change=function(m)local n=vim.fn.system("git show "..tostring(m.text)..":"..tostring(f))n=vim.split(n,"\n")return vim.api.nvim_buf_set_lines(k,0,-1,false,n)end,on_submit=function(m)local n={"Yes","No","Cancel"}local o;o=function(p)if"Yes"==p then if vim.fn.system("git checkout "..tostring(m.text))then return vim.notify("Checked out "..tostring(m.text).."!")end elseif"No"==p then return vim.api.nvim_buf_delete(k,{force=true})else return vim.notify("Cancelled.")end end;return vim.ui.select(n,{prompt="Are you sure?"},o)end,on_close=function(m)return vim.api.nvim_buf_delete(k,{force=true})end}return b(i,l)end;local e;e=function(f)if f==nil then f=vim.fn.expand("%")end;local h=a:new({"git","log","--pretty=format:%h","--no-notes","--no-color","--no-decorate","--ignore-submodules",f,on_exit=function(i,j)if j~=0 then return end;return vim.schedule(function()return d(f,i:result()):mount()end)end})return h:start()end;g["walk"]=e;return g